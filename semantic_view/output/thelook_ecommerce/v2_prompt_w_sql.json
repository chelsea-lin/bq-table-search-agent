{
  "tables": [
    {
      "name": "distribution_centers",
      "primary_key": "id"
    },
    {
      "name": "events",
      "primary_key": "id"
    },
    {
      "name": "inventory_items",
      "primary_key": "id"
    },
    {
      "name": "order_items",
      "primary_key": "id"
    },
    {
      "name": "orders",
      "primary_key": "order_id"
    },
    {
      "name": "products",
      "primary_key": "id"
    },
    {
      "name": "users",
      "primary_key": "id"
    }
  ],
  "relationships": [
    {
      "from_table": "order_items",
      "from_column": "order_id",
      "to_table": "orders",
      "to_column": "order_id"
    },
    {
      "from_table": "order_items",
      "from_column": "user_id",
      "to_table": "users",
      "to_column": "id"
    },
    {
      "from_table": "order_items",
      "from_column": "inventory_item_id",
      "to_table": "inventory_items",
      "to_column": "id"
    },
    {
      "from_table": "inventory_items",
      "from_column": "product_id",
      "to_table": "products",
      "to_column": "id"
    },
    {
      "from_table": "inventory_items",
      "from_column": "product_distribution_center_id",
      "to_table": "distribution_centers",
      "to_column": "id"
    },
    {
      "from_table": "events",
      "from_column": "user_id",
      "to_table": "users",
      "to_column": "id"
    },
    {
      "from_table": "orders",
      "from_column": "user_id",
      "to_table": "users",
      "to_column": "id"
    },
    {
      "from_table": "products",
      "from_column": "distribution_center_id",
      "to_table": "distribution_centers",
      "to_column": "id"
    }
  ],
  "dimensions": [
    {
      "name": "User First Name",
      "column": "users.first_name"
    },
    {
      "name": "User Last Name",
      "column": "users.last_name"
    },
    {
      "name": "User Gender",
      "column": "users.gender"
    },
    {
      "name": "User Age",
      "column": "users.age"
    },
    {
      "name": "User State",
      "column": "users.state"
    },
    {
      "name": "User City",
      "column": "users.city"
    },
    {
      "name": "User Country",
      "column": "users.country"
    },
    {
      "name": "User Traffic Source",
      "column": "users.traffic_source"
    },
    {
      "name": "User Creation Date",
      "column": "CAST(users.created_at AS DATE)"
    },
    {
      "name": "Product Name",
      "column": "products.name"
    },
    {
      "name": "Product Category",
      "column": "products.category"
    },
    {
      "name": "Product Brand",
      "column": "products.brand"
    },
    {
      "name": "Product Department",
      "column": "products.department"
    },
    {
      "name": "Order Status",
      "column": "orders.status"
    },
    {
      "name": "Order Date",
      "column": "CAST(orders.created_at AS DATE)"
    },
    {
      "name": "Order Shipped Date",
      "column": "CAST(orders.shipped_at AS DATE)"
    },
    {
      "name": "Order Delivered Date",
      "column": "CAST(orders.delivered_at AS DATE)"
    },
    {
      "name": "Order Item Status",
      "column": "order_items.status"
    },
    {
      "name": "Distribution Center Name",
      "column": "distribution_centers.name"
    },
    {
      "name": "Event Type",
      "column": "events.event_type"
    },
    {
      "name": "Event Browser",
      "column": "events.browser"
    },
    {
      "name": "Event URI",
      "column": "events.uri"
    },
    {
      "name": "Event Date",
      "column": "CAST(events.created_at AS DATE)"
    },
    {
      "name": "Event Traffic Source",
      "column": "events.traffic_source"
    }
  ],
  "metrics": [
    {
      "name": "Total Revenue",
      "sql": "SUM(order_items.sale_price)"
    },
    {
      "name": "Number of Unique Orders",
      "sql": "COUNT(DISTINCT orders.order_id)"
    },
    {
      "name": "Number of Line Items Sold",
      "sql": "COUNT(order_items.id)"
    },
    {
      "name": "Average Sale Price (per Line Item)",
      "sql": "AVG(order_items.sale_price)"
    },
    {
      "name": "Total Registered Users",
      "sql": "COUNT(DISTINCT users.id)"
    },
    {
      "name": "Number of Unique Customers (who placed an order)",
      "sql": "COUNT(DISTINCT orders.user_id)"
    },
    {
      "name": "Total Products in Catalog",
      "sql": "COUNT(DISTINCT products.id)"
    },
    {
      "name": "Cost of Goods Sold (COGS)",
      "sql": "SUM(inventory_items.cost)"
    },
    {
      "name": "Total Profit",
      "sql": "SUM(order_items.sale_price - inventory_items.cost)"
    },
    {
      "name": "Total Web Events",
      "sql": "COUNT(events.id)"
    },
    {
      "name": "Average Product Retail Price (Catalog)",
      "sql": "AVG(products.retail_price)"
    },
    {
      "name": "Average Product Standard Cost (Catalog)",
      "sql": "AVG(products.cost)"
    },
    {
      "name": "Total Quantity of Items in Orders",
      "sql": "SUM(orders.num_of_item)"
    },
    {
      "name": "Number of Unique Web Sessions",
      "sql": "COUNT(DISTINCT events.session_id)"
    }
  ],
  "example_sqls": [
    {
      "question": "What is our Total Revenue?",
      "sql": "SELECT SUM(oi.sale_price) AS Total_Revenue FROM bigframes-dev-perf.thelook_ecommerce.order_items AS oi"
    },
    {
      "question": "How many Number of Unique Orders were placed by users whose User State is 'California'?",
      "sql": "SELECT COUNT(DISTINCT o.order_id) AS Number_of_Unique_Orders FROM bigframes-dev-perf.thelook_ecommerce.orders AS o JOIN bigframes-dev-perf.thelook_ecommerce.users AS u ON o.user_id = u.id WHERE u.state = 'California'"
    },
    {
      "question": "List the top 5 Product Categories by Total Profit.",
      "sql": "SELECT p.category AS Product_Category, SUM(oi.sale_price - ii.cost) AS Total_Profit FROM bigframes-dev-perf.thelook_ecommerce.order_items AS oi JOIN bigframes-dev-perf.thelook_ecommerce.inventory_items AS ii ON oi.inventory_item_id = ii.id JOIN bigframes-dev-perf.thelook_ecommerce.products AS p ON ii.product_id = p.id GROUP BY p.category ORDER BY Total_Profit DESC LIMIT 5"
    },
    {
      "question": "Show the Total Revenue for each Order Date.",
      "sql": "SELECT CAST(o.created_at AS DATE) AS Order_Date, SUM(oi.sale_price) AS Total_Revenue FROM bigframes-dev-perf.thelook_ecommerce.order_items AS oi JOIN bigframes-dev-perf.thelook_ecommerce.orders AS o ON oi.order_id = o.order_id GROUP BY Order_Date ORDER BY Order_Date ASC"
    },
    {
      "question": "For users whose User Creation Date was in the year 2023 and who placed an order, what is their Average Sale Price (per Line Item) and the total Number of Line Items Sold, broken down by User Traffic Source?",
      "sql": "SELECT u.traffic_source AS User_Traffic_Source, AVG(oi.sale_price) AS Average_Sale_Price_per_Line_Item, COUNT(oi.id) AS Number_of_Line_Items_Sold FROM bigframes-dev-perf.thelook_ecommerce.users AS u JOIN bigframes-dev-perf.thelook_ecommerce.orders AS o ON u.id = o.user_id JOIN bigframes-dev-perf.thelook_ecommerce.order_items AS oi ON o.order_id = oi.order_id WHERE EXTRACT(YEAR FROM u.created_at) = 2023 GROUP BY u.traffic_source ORDER BY User_Traffic_Source ASC"
    },
    {
      "question": "For users whose User First Name is 'John', what are the different Event URIs they visited and how many Total Web Events were recorded for each URI?",
      "sql": "SELECT e.uri AS Event_URI, COUNT(e.id) AS Total_Web_Events FROM bigframes-dev-perf.thelook_ecommerce.events AS e JOIN bigframes-dev-perf.thelook_ecommerce.users AS u ON e.user_id = u.id WHERE u.first_name = 'John' GROUP BY e.uri ORDER BY Total_Web_Events DESC"
    },
    {
      "question": "List all Product Names and their Product Category from the 'Houston TX' Distribution Center Name.",
      "sql": "SELECT p.name AS Product_Name, p.category AS Product_Category FROM bigframes-dev-perf.thelook_ecommerce.products AS p JOIN bigframes-dev-perf.thelook_ecommerce.distribution_centers AS dc ON p.distribution_center_id = dc.id WHERE dc.name = 'Houston TX' ORDER BY Product_Name ASC"
    },
    {
      "question": "Which Product Brands have an Average Product Retail Price (Catalog) greater than $100 and also have more than 10 products in their catalog?",
      "sql": "SELECT p.brand AS Product_Brand, AVG(p.retail_price) AS Average_Retail_Price, COUNT(p.id) AS Number_of_Products_In_Brand FROM bigframes-dev-perf.thelook_ecommerce.products AS p GROUP BY p.brand HAVING AVG(p.retail_price) > 100 AND COUNT(p.id) > 10 ORDER BY Average_Retail_Price DESC"
    },
    {
      "question": "What is the Number of Unique Orders and their Total Revenue for orders with an Order Status of 'Shipped'?",
      "sql": "SELECT COUNT(DISTINCT o.order_id) AS Number_of_Unique_Orders, SUM(oi.sale_price) AS Total_Revenue FROM bigframes-dev-perf.thelook_ecommerce.orders AS o JOIN bigframes-dev-perf.thelook_ecommerce.order_items AS oi ON o.order_id = oi.order_id WHERE o.status = 'Shipped'"
    },
    {
      "question": "Calculate the Total Profit from products in the 'Tops & Tees' Product Category, sold to users with User Gender 'Female' and User Age greater than 30.",
      "sql": "SELECT SUM(oi.sale_price - ii.cost) AS Total_Profit FROM bigframes-dev-perf.thelook_ecommerce.order_items AS oi JOIN bigframes-dev-perf.thelook_ecommerce.inventory_items AS ii ON oi.inventory_item_id = ii.id JOIN bigframes-dev-perf.thelook_ecommerce.products AS p ON ii.product_id = p.id JOIN bigframes-dev-perf.thelook_ecommerce.users AS u ON oi.user_id = u.id WHERE p.category = 'Tops & Tees' AND u.gender = 'F' AND u.age > 30"
    }
  ]
}